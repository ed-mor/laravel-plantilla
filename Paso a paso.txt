Paso a paso de la Plantilla
---------------------------

1)	Instalación del paquete del idioma español para Jetstream.

	composer require amendozaaguiar/laraveles-spanish-for-jetstream

2)	Actualizamos las traducciones.

	php artisan vendor:publish --tag=lang

3)	Luego en el config/app.php

	'locale'          => 'es',

4)	Cambiando el logo de las pantallas de Autenticación.

	El logo es renderizado por el componente 'Login.vue', a
	través de su componente hijo: 'AuthenticationCardLogo.vue'.

	El 'Login.vue' recibe una 'props' con el nombre 'logo', el cual
	le pasamos a través de: En el archivo: 'FortifyServiceProvider.php'
	en el método 'boot', le agregamos lo siguiente:

        Fortify::loginView(function () {
            return Inertia::render('Auth/Login', [
                'canResetPassword' => Route::has('password.request'),
                'status' => session('status'),
                'logo' => config(system.app:logo)
            ]);
        });

    Aquí le pasamos un string con el path del logo de la aplicación.

    Pero que sucede? en otras ventanas no estará disponible ese String que 
    nos aporta el path/name del ícono. Entonces recurrimos a 'Shared data' 
    (Datos compartidos) de inertiaJs que permite datos compartidos para todos 
    los componentes VUE de la aplicación.

    Para que esté disponible para todos los componentes de VUE, Compartimos 
    esos datos en el archivo: HandleInertiaRequests.php

	    public function share(Request $request)
	    {
	        return array_merge(parent::share($request), [
	            // Logo de la aplicación
	            'logo' => config('system.app_logo'),
	        ]);
	    }    


5)	El ícono de la aplicación.

	La Aplicación renderiza un index.html (resorces/views/app.blade.php) como base para los componentes VUE, la cual en su comportamiento normal busca un archivo 'public/favicon.ico', 
	para renderizar el ícono en el navegador.

	Pero, podemos cambiar ese comportamiento editando ese archivo.

    {{-- ícono de la página --}}
    <link rel="shortcut icon" href=" {{config('system.app_icon')}} " />
    Utilizamos el helpper config, para traer datos del array de configuración del sistema
    que es devuelto por el archivo 'config/system.php'




